## cinclude "<fcntl.h>"
## cinclude "<sys/stat.h>"

local statx_timestamp : type <cimport, nodecl> = @record {
	tv_sec : int64,
	tv_nsec : uint32
}

## cinclude "#define statx_t struct statx"

local statx_t : type <cimport, nodecl> = @record {
	stx_mask : uint32,
	stx_blksize : uint32,
	stx_attributes : uint64,
	stx_nlink : uint32,
	stx_uid : uint32,
	stx_gid : uint32,
	stx_mode : uint16,
	stx_ino : uint64,
	stx_size : uint64,
	stx_blocks : uint64,
	stx_attributes_mask : uint64,
	stx_atime : statx_timestamp,
	stx_btime : statx_timestamp,
	stx_ctime : statx_timestamp,
	stx_mtime : statx_timestamp,
	stx_rdev_major : uint32,
	stx_rdev_minor : uint32,
	stx_dev_major : uint32,
	stx_dev_minor : uint32,
	stx_mnt_id : uint64
}
local STATX_ALL : cint <cimport, nodecl>
local AT_FDCWD : cint <cimport, nodecl>
local AT_SYMLINK_NOFOLLOW : cint <cimport, nodecl>
local function _statx(dirfd : cint, pathname : cstring, flags : cint, mask : cuint, statxbuf : *statx_t) : cint <cimport, nodecl, cimport 'statx'> end

function statx_t.stat(path : string) : (boolean, statx_t, cint)
	local st : statx_t
	local res = _statx(AT_FDCWD, path, AT_SYMLINK_NOFOLLOW, STATX_ALL, &st)
	return res == 0, st, res
end

return statx_t
